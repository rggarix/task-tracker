{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index !== -1) state.tasks[index] = action.payload;\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    setTasks: (state, action) => {\n      state.tasks = action.payload;\n    }\n  }\n});\nexport const {\n  addTask,\n  deleteTask,\n  setTasks,\n  updateTask\n} = taskSlice.actions;\nexport const fetchTasks = () => async dispatch => {\n  try {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n    dispatch(setTasks(response.data.slice(0, 10))); // Use only the first 10 tasks for simplicity\n  } catch (error) {\n    console.error('Failed to fetch tasks:', error);\n  }\n};\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","taskSlice","name","initialState","tasks","status","error","reducers","addTask","state","action","push","payload","updateTask","index","findIndex","task","id","deleteTask","filter","setTasks","actions","fetchTasks","dispatch","response","axios","get","data","slice","console","reducer"],"sources":["/Users/rajat/dev/task/task-tracker/src/redux/taskSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: [],\n    status: 'idle',\n    error: null,\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index !== -1) state.tasks[index] = action.payload;\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    setTasks: (state, action) => {\n      state.tasks = action.payload;\n    },\n  },\n});\n\nexport const { addTask, deleteTask, setTasks, updateTask } = taskSlice.actions;\n\nexport const fetchTasks = () => async (dispatch) => {\n  try {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n    dispatch(setTasks(response.data.slice(0, 10))); // Use only the first 10 tasks for simplicity\n  } catch (error) {\n    console.error('Failed to fetch tasks:', error);\n  }\n};\n\nexport default taskSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMI,KAAK,GAAGL,KAAK,CAACL,KAAK,CAACW,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACK,EAAE,CAAC;MAC1E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAEL,KAAK,CAACL,KAAK,CAACU,KAAK,CAAC,GAAGJ,MAAM,CAACE,OAAO;IACvD,CAAC;IACDM,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACe,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAAC;IACtE,CAAC;IACDQ,QAAQ,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACE,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,OAAO;EAAEU,UAAU;EAAEE,QAAQ;EAAEP;AAAW,CAAC,GAAGZ,SAAS,CAACoB,OAAO;AAE9E,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAC9EH,QAAQ,CAACH,QAAQ,CAACI,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOtB,KAAK,EAAE;IACduB,OAAO,CAACvB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD;AACF,CAAC;AAED,eAAeL,SAAS,CAAC6B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}